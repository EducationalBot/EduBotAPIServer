version: '2'

services:
  postgres:
    image: postgres:12-alpine
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    depends_on:
      - db
    restart: always

  backend:
    image: backend
    build:
      context: .
      dockerfile: docker/backend/backend.dockerfile
    env_file:
      - .env
    command: >
      bash -c "python wait_for_postgres.py &&
               ./manage.py migrate &&
               ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/code
    depends_on:
      - postgres
    restart: always

  redis:
    image: "redis:6.2.6-alpine"
    restart: always

  celery:
    build:
      context: .
      dockerfile: ./docker/celery/celery.dockerfile
    container_name: celery
    command: celery -A api worker -l info
    env_file:
      - .env
    volumes:
      - ./:/code
    depends_on:
      - web
      - postgres
      - redis
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: ./docker/celery_beat/celery_beat.dockerfile
    command: celery -A api beat -l info
    env_file:
      - .env
    volumes:
      - ./:/code
    depends_on:
      - web
      - postgres
      - redis
    restart: always

  flower:
    image: mher/flower:0.9.5
    env_file:
      - .env
    ports:
    - "5555:5555"


volumes:
  app-db-data:
