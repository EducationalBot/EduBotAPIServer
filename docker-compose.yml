version: '2'

services:
  postgres:
    restart: always
    image: postgres:12-alpine
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432"
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - .env
  web:
    restart: always
    environment:
      - DJANGO_SECRET_KEY=local
    env_file:
      - .env
    image: web
    build: ./
    command: >
      bash -c "python wait_for_postgres.py &&
               ./manage.py migrate &&
               ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/code
    ports:
      - "8000:8000"
    depends_on:
      - postgres
  redis:
    restart: always
    image: "redis:alpine"
  celery:
    build: ./
    restart: always
    container_name: celery
    command: celery -A api worker -l info
    environment:
      - DJANGO_SECRET_KEY=local
    env_file:
      - .env
    volumes:
      - ./:/code
      - ~/data/video/savePath/:/code/data/video/savePath/
      - ~/data/log/:/code/data/log/
      - ~/data/:/code/data/
    depends_on:
      - web
      - postgres
      - redis
  celery-beat:
    build: .
    restart: always
    container_name: celery-beat
    command: celery -A api beat -l info
    environment:
      - DJANGO_SECRET_KEY=local
    env_file:
      - .env
    volumes:
      - ./:/code
      - ~/data/video/savePath/:/code/data/video/savePath/
      - ~/data/log/:/code/data/log/
      - ~/data/:/code/data/
    depends_on:
      - web
      - postgres
      - redis

volumes:
  app-db-data:
